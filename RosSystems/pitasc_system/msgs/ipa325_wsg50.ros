PackageSet{
    Package ipa325_wsg50{ Specs { 
      TopicSpec systState{ message { float32 width float32 speed float32 force float32 forcelimit float32 acceleration float32 softlimit_minus float32 softlimit_plus bool softlimitsset int32 grasp_state }},
      ServiceSpec ackFastStop{ request {  } response {  } },
      ServiceSpec clearSoftLimits{ request {  } response {  } },
      ServiceSpec fastStop{ request {  } response {  } },
      ServiceSpec setAcceleration{ request { float32 acceleration } response {  } },
      ServiceSpec setForceLimit{ request { float32 force } response {  } },
      ServiceSpec setSoftLimits{ request { float32 limit_minus float32 limit_plus } response {  } },
      ServiceSpec stop{ request {  } response {  } },
      ServiceSpec tareForceSensor{ request {  } response { int32 status_code } },
      ActionSpec LwrRunControlScheme { goal { int32 scheme} result {int32 error_code int32 SUCCESSFUL=0 int32 CONNECTION_FAILED=-1} feedback { "std_msgs.Header" header "trajectory_msgs.JointTrajectoryPoint" actual}},
      ActionSpec WSG50GraspPart { goal { float32 width float32 speed } result { int32 status_code } feedback { float32 width float32 speed float32 force}},
      ActionSpec WSG50Homing { goal { bool direction } result { int32 status_code } feedback { float32 width float32 speed float32 force }},
	  ActionSpec WSG50PrePositionFingers { goal { bool stopOnBlock float32 width float32 speed } result { int32 status_code } feedback { float32 width float32 speed float32 force }},
 	  ActionSpec WSG50ReleasePart { goal { float32 openwidth float32 speed } result { int32 status_code } feedback { float32 width float32 speed float32 force }}
    }}
  }